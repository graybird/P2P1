package com.neurogrid.simulation.statistics;

import junit.framework.TestCase;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class StatisticsTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  com.neurogrid.simulation.statistics.Statistics statistics = null;
  // JUnitDoclet end class
  
  public StatisticsTest(String name) {
    // JUnitDoclet begin method StatisticsTest
    super(name);
    // JUnitDoclet end method StatisticsTest
  }
  
  public com.neurogrid.simulation.statistics.Statistics createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new com.neurogrid.simulation.statistics.Statistics(null);
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    statistics = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    statistics = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetCvsInfo() throws Exception {
    // JUnitDoclet begin method getCvsInfo
    // JUnitDoclet end method getCvsInfo
  }
  
  public void testSetMinimumLimit() throws Exception {
    // JUnitDoclet begin method setMinimumLimit
    // JUnitDoclet end method setMinimumLimit
  }
  
  public void testSetMaximumLimit() throws Exception {
    // JUnitDoclet begin method setMaximumLimit
    // JUnitDoclet end method setMaximumLimit
  }
  
  public void testCalculate() throws Exception {
    // JUnitDoclet begin method calculate
    // JUnitDoclet end method calculate
  }
  
  public void testGetMin() throws Exception {
    // JUnitDoclet begin method getMin
    // JUnitDoclet end method getMin
  }
  
  public void testGetMax() throws Exception {
    // JUnitDoclet begin method getMax
    // JUnitDoclet end method getMax
  }
  
  public void testGetAverage() throws Exception {
    // JUnitDoclet begin method getAverage
    // JUnitDoclet end method getAverage
  }
  
  public void testGetDeviation() throws Exception {
    // JUnitDoclet begin method getDeviation
    // JUnitDoclet end method getDeviation
  }
  
  public void testGetVariance() throws Exception {
    // JUnitDoclet begin method getVariance
    // JUnitDoclet end method getVariance
  }
  
  public void testGetOutputString() throws Exception {
    // JUnitDoclet begin method getOutputString
    // JUnitDoclet end method getOutputString
  }
  
  public void testToString() throws Exception {
    // JUnitDoclet begin method toString
    // JUnitDoclet end method toString
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(StatisticsTest.class);
    // JUnitDoclet end method testcase.main
  }
}
